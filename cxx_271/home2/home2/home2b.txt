I am providing you 2 files: VendingItems.h  and Main.cpp.  
I am also providing you with the output of Main.cpp.  
Your Job is to write VendingItems.cpp.

// ****************************************
// VendingItems.h
// ****************************************
class Item
{    
public:
// Make sure your constructors initialize your data.
// itemPrice and itemQuantity can be set to 0
// The default constructor should set itemName to "unknown"
    Item();
    Item(char name[]);

// The following setXxx methods allow you to set the appropriate
// variables
    void  setName( char name[]);      // sets itemName
    void  setPrice(int price);        // sets itemPrice
    void  setInventory(int quantity); // sets itemQuantity

// buyItem will reduce the quantity
    bool  buyItem();

// This routine returns "true" if name matches the characters
// in itemName.  Note that name can be a subset of itemName as
// long as all of the first characters in itemName match name
    bool  matchName(char name[]);

// print to cout the contents of the item.  This routine should be
// called in generating the output shown below:
    void  output();

private:
    static const int NAME_SIZE = 20;
    char itemName[NAME_SIZE];
    int itemQuantity;
    int itemPrice; // in pennies
};

class VendingItems
{
public:
// get the index of the item that matches the passed in name.  
// This routine should use the matchName method in the Item class
    int  getItemIndex(char name[]);

// This routine allows the entry at "index" to be replaced by
// the passed in Item class (entry)
    void setItem (Item entry, int index);

// This routine returns the Item class at "index"
    Item getItem (int index);

// Buy an item with the name of "selection"
    bool buyItem(char selection[]);

// returns total number of Items in the vending machine
    int  getNumItems()
    {
        return NUM_ITEMS;
    }
    
private:
    static const int NUM_ITEMS = 10;

    Item itemList[NUM_ITEMS];
};


// ***********************************************
// Main.cpp
// ***********************************************
#include <iostream>
using namespace std;
#include "VendingItems.h"

int main()
{
    int quantities[] = {2, 1, 20, 20, 15, 15, 15, 10, 20, 20};
    int prices[]     = {65, 65, 85, 95, 70, 50, 65, 85, 70, 65};
    char *names[]    = {"M&Ms", "Baby Ruth", "Peanuts",    "Gum", "Pretzels",
        "Chips","Licorice",  "Milk Duds",  "Butter Finger", "Fritos"};

    VendingItems stuff;
    int num = stuff.getNumItems();
    Item tempItem;

    for (int i=0; i < num; i++)
    {
        tempItem.setName(names[i]);
        tempItem.setPrice(prices[i]);
        tempItem.setInventory(quantities[i]);
        stuff.setItem(tempItem, i);
    }
    if (stuff.buyItem("M&Ms")) cout << "Bought M&Ms" << endl;
    if (stuff.buyItem("M&Ms")) cout << "Bought M&Ms" << endl;
    if (stuff.buyItem("M&Ms")) cout << "Bought M&Ms" << endl;
    if (stuff.buyItem("Baby Ruth")) cout << "Bought Baby Ruth" << endl;
    if (stuff.buyItem("Baby Ruth")) cout << "Bought Baby Ruth" << endl;
    if (stuff.buyItem("Gum"))  cout << "Bought Gum"  << endl;
    if (stuff.buyItem("Gum"))  cout << "Bought Gum"  << endl;
    if (stuff.buyItem("Gum"))  cout << "Bought Gum"  << endl;
    if (stuff.buyItem("Cashews")) cout << "Bought Cashews" << endl;

    for (int i=0; i < num; i++)
    {
        tempItem = stuff.getItem(i);
        cout <<"Item("<< i << ") = " ;
        tempItem.output();
        cout << endl;
    }

}



// **********************************************
// OUTPUT FROM Main.cpp
// **********************************************
Bought M&Ms
Bought M&Ms
Bought Baby Ruth
Bought Gum
Bought Gum
Bought Gum
Item(0) = M&Ms quantity(0) price(65)
Item(1) = Baby Ruth quantity(0) price(65)
Item(2) = Peanuts quantity(20) price(85)
Item(3) = Gum quantity(17) price(95)
Item(4) = Pretzels quantity(15) price(70)
Item(5) = Chips quantity(15) price(50)
Item(6) = Licorice quantity(15) price(65)
Item(7) = Milk Duds quantity(10) price(85)
Item(8) = Butter Finger quantity(20) price(70)
Item(9) = Fritos quantity(20) price(65)
Press any key to continue . . .